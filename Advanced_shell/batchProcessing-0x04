#!/bin/bash

DATA_DIR="pokemon_data"
mkdir -p "$DATA_DIR"

POKEMON_LIST=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
BASE_URL="https://pokeapi.co/api/v2/pokemon"
ERROR_LOG="errors_parallel.log"
> "$ERROR_LOG"

declare -a PIDS=()

fetch_pokemon() {
  local name="$1"
  local output="$DATA_DIR/${name}.json"

  echo "Fetching data for $name..."
  if curl -s -f "$BASE_URL/$name" -o "$output"; then
    echo "Saved data to $output ✅"
  else
    echo "Failed to fetch data for $name ❌" | tee -a "$ERROR_LOG"
  fi
}

for pokemon in "${POKEMON_LIST[@]}"; do
  fetch_pokemon "$pokemon" &
  PIDS+=($!)
done

# Demonstrate kill usage safely BEFORE waiting
for pid in "${PIDS[@]}"; do
  if kill -0 "$pid" 2>/dev/null; then
    echo "Background fetch PID $pid is running (not killing)."
    # kill "$pid"  # Commented out to avoid killing actual jobs
  fi
done

# Wait for all background jobs to complete
wait

echo "✅ All fetch operations completed."
